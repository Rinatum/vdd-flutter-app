name: Flutter CI

on:
  push:
#  pull_request:

jobs:
  analyze:
    name: Run analyzer and formatter
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.4'
          cache: true
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter format --set-exit-if-changed .

  test:
    name: Run tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.4'
          cache: true
      - run: flutter pub get
      - run: flutter test --no-sound-null-safety
        id: test
      - if: ${{ failure() && steps.test.conclusion == 'failure' }}
        name: 'Upload test failures'
        uses: actions/upload-artifact@v3
        with:
          name: test-failures
          path: test/failures
          retention-days: 5

  build:
    needs: [analyze, test]
    name: Build ${{ matrix.target }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        target: ['android']
        include:
          - target: android
            os: ubuntu-latest
            build-args: 'apk --no-sound-null-safety --release'
            java-version: '11'

    steps:
      - uses: actions/checkout@v3
      - if: ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.4'
          cache: true
      - run: flutter build ${{ matrix.build-args }}
      - name: Upload apk
        uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/release/app-release.apk